openapi: "3.0.1"
info:
  title:
    Fn::Sub: "${OfferApiName}"
  version: "1.0"
servers:
- url: https://api.{env}.alayamarket.{region}/offers
  variables:
    env:
      description: The server environment.
      enum:
        - staging
        - sandbox
        - prod
      default: prod
    region:
      description: The server top-level domain indicating the region.
      enum:
        - ca
        - com
        - com.au
      default: ca
paths:
  /v1/status/healthz:
    get:
      tags:
        - offer status
      responses:
        200:
          description: Current healthz status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusHealthzResponse'
      # This endpoint does not require authentication
      security:
        - NONE: [ ]
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
  /v1/outbox/shift/offers:
    post:
      tags:
        - offer outbox ALPHA
      description: |
        # Authorization
        Required role: `org_admin`

        # Description
        Create a Shift Offer by the Demand organization. 
        This will generate multiple offers with type: `visit` linked with a common `shift_id`. 
        Multiple open or assigned offers with offer_type: `visit` are not permitted for the same visit. This is to prevent conflicting acceptances and assignations.

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutboxShiftOfferCreateRequest'
      responses:
        201:
          description: "Successfully created Offer"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboxShiftOfferCreateResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/outbox/offers:
    post:
      tags:
        - offer outbox
      description: |
        # Authorization
        Required role: `org_admin`

        # Description
        Create an Offer by the Demand organization.  
        Multiple open or assigned offers with offer_type: `visit` are not permitted for the same visit. This is to prevent conflicting acceptances and assignations.

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutboxOfferCreateRequest'
      responses:
        201:
          description: "Successfully created Offer"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboxOfferDetailResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
    get:
      # missing query parameters for offer_type, care_type, etc.
      tags:
        - offer outbox
      description: |
        # Authorization
        Required role: `org_admin`

        # Description
        Get a collection of Offers created by the Demand organization.
      parameters:
        - in: query
          name: care_type
          schema:
            $ref: '#/components/schemas/CareTypeCore'
        - in: query
          name: offer_type
          schema:
            $ref: '#/components/schemas/OfferTypeCore'
        - in: query
          name: status
          schema:
            $ref: '#/components/schemas/OfferStatusCore'
        - in: query
          name: client_outbox_id
          schema:
            type: string
        - in: query
          name: visit_outbox_id
          schema:
            type: string
        - in: query
          name: is_accepted
          schema:
            type: boolean
            description: Offers accepted by at least one match.
        - in: query
          name: expires_after
          schema:
            type: string
            format: date-time
            description: Offers that expire after this date-time.
        - in: query
          name: expires_before
          schema:
            type: string
            format: date-time
            description: Offers that expire before this date-time.
        - $ref: '#/components/parameters/ShiftIdQueryParam'
        - in: query
          name: demand_label
          schema:
            type: string
            description: Offers associated with any given label set by the demand
              organization.
        - $ref: '#/components/parameters/PageNumberParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
        - $ref: '#/components/parameters/SortByParam'
        - $ref: '#/components/parameters/SortOrderParam'
      responses:
        200:
          description: 'Successfully returned Offer Outbox Collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboxOfferPageResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/outbox/offers/{offer_id}:
    parameters:
      - $ref: '#/components/parameters/OfferIdPathParam'
    get:
      tags:
        - offer outbox
      description: |
        # Authorization

        Required role: `org_admin`

        # Description
        Get the details of an Offer created by the Demand organization.
      responses:
        200:
          description: 'Successfully returned Offer Outbox Scalar'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboxOfferDetailResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/outbox/offers/{offer_id}/matches:
    parameters:
    - $ref: '#/components/parameters/OfferIdPathParam'
    get:
      tags:
        - offer outbox
      description: |
        # Authorization

        Required role: `org_admin`

        # Description
        Get the Offer Matches of an Offer created by the Demand organization.
      parameters:
        - in: query
          name: response
          schema:
            $ref: '#/components/schemas/OfferMatchResponseCore'
          description: |
            Response of an Offer Match to filter on. <br>
            Multiple values are supported (in an `OR` fashion). <br>
        - $ref: '#/components/parameters/PageNumberParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
        - $ref: '#/components/parameters/SortByParam'
        - $ref: '#/components/parameters/SortOrderParam'
      responses:
        200:
          description: 'Successfully returned Offer Matches.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboxOfferMatchPageResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/outbox/offers/{offer_id}/close:
    parameters:
      - $ref: '#/components/parameters/OfferIdPathParam'
    post:
      tags:
        - offer outbox
      description: |
        # Authorization
        Required role: `org_admin`

        Required offer state: `sent`


        # Description
        Close an Offer created by the Demand organization that has not yet been assigned.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutboxOfferCloseRequest'
      responses:
        204:
          description: "Successfully marked Offer as Cancelled"
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/outbox/offers/{offer_id}/assign:
    parameters:
      - $ref: '#/components/parameters/OfferIdPathParam'
    post:
      tags:
        - offer outbox
      description: |
        # Authorization
        Required role: `org_admin`.

        Required offer state: `accepted`.

        # Description
        Assign an Offer created by the Demand Organization to a
        Supply Organization that accepted the Offer.  
        The offer assignment setting of the Demand organization must be set to `manual`, otherwise this action is forbidden.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutboxOfferAssignRequest'
      responses:
        204:
          description: "Successfully marked Offer as Assigned."
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/inbox/offers:
    get:
      tags:
        - offer inbox
      description: |
        # Authorization
        Required role: `org_admin`

        # Description
        Get a collection of Offers matched to the Supply Organization.
      parameters:
        - in: query
          name: status
          description: |
            Filter on an Offer Match status. Filtering on multiple statuses is not supported.
          schema:
            $ref: '#/components/schemas/OfferMatchStatusCore'
        - $ref: '#/components/parameters/ShiftIdQueryParam'
        - $ref: '#/components/parameters/PageNumberParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
        - $ref: '#/components/parameters/SortByParam'
        - $ref: '#/components/parameters/SortOrderParam'
      responses:
        200:
          description: "Successfully returned Offer Inbox Collection."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboxOfferPageResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/inbox/offers/{offer_id}:
    parameters:
      - $ref: '#/components/parameters/OfferIdPathParam'
    get:
      tags:
        - offer inbox
      description: |
        # Authorization
        Required role: `org_admin`

        # Description
        Get the anonamyzed details of Offers matched to the Supply
        organization. This must contain no PHI.
      responses:
        200:
          description: "Successfully returned Offer Inbox Scalar"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboxOfferDetailResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/inbox/offers/{offer_id}/accept:
    parameters:
      - $ref: '#/components/parameters/OfferIdPathParam'
    post:
      tags:
        - offer inbox
      description: |
        # Authorization
        Required role: `org_admin`

        Required offer state: `sent`

        # Description
        Accept an Offer matched to the Supply organization.
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboxOfferAcceptRequest'
      responses:
        204:
          description: "Successfully marked Offer as Accepted"
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/inbox/offers/{offer_id}/decline:
    parameters:
      - $ref: '#/components/parameters/OfferIdPathParam'
    post:
      tags:
        - offer inbox
      description: |
        # Authorization
        Required role: `org_admin`

        Required offer state: `sent`

        # Description
        Decline an Offer matched to the Supply organization.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboxOfferDeclineRequest'
      responses:
        204:
          description: "Successfully marked Offer as Declined"
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/sys_admin/offers:
    get:
      tags:
        - offer sys_admin
      description: |
        # Authorization
        Required role: `sys_admin`

        # Description
        Get a collection of Offers.
      parameters:
        - in: query
          name: id
          schema:
            type: string
            format: uuid
        - in: query
          name: demand_persona_id
          schema:
            type: string
            format: uuid
        - in: query
          name: care_type
          schema:
            $ref: '#/components/schemas/CareTypeCore'
        - in: query
          name: offer_type
          schema:
            $ref: '#/components/schemas/OfferTypeCore'
        - in: query
          name: status
          schema:
            $ref: '#/components/schemas/OfferStatusCore'
        - in: query
          name: client_outbox_id
          schema:
            type: string
        - in: query
          name: visit_outbox_id
          schema:
            type: string
        - in: query
          name: is_accepted
          schema:
            type: boolean
            description: Offers accepted by at least one match.
        - in: query
          name: expires_after
          schema:
            type: string
            format: date-time
            description: Offers that expire after this date-time.
        - in: query
          name: expires_before
          schema:
            type: string
            format: date-time
            description: Offers that expire before this date-time.
        - $ref: '#/components/parameters/ShiftIdQueryParam'
        - $ref: '#/components/parameters/PageNumberParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
        - $ref: '#/components/parameters/SortByParam'
        - $ref: '#/components/parameters/SortOrderParam'
      responses:
        200:
          description: 'Successfully returned Offer Collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboxOfferPageResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/sys_admin/offers/{offer_id}:
    parameters:
      - $ref: '#/components/parameters/OfferIdPathParam'
    get:
      tags:
        - offer sys_admin
      description: |
        # Authorization
        Required role: `sys_admin`

        # Description
        Get the details of an Offer.
      responses:
        200:
          description: 'Successfully returned offer details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SysAdminOfferDetailResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/sys_admin/offers/{offer_id}/matches:
    parameters:
    - $ref: '#/components/parameters/OfferIdPathParam'
    get:
      tags:
        - offer sys_admin
      description: |
        # Authorization

        Required role: `sys_admin`

        # Description
        Get the Offer Matches of an Offer.
      parameters:
        - in: query
          name: response
          schema:
            $ref: '#/components/schemas/OfferMatchResponseCore'
          description: |
            Response of an Offer Match to filter on.
            Multiple values are supported (in an `OR` fashion).
        - $ref: '#/components/parameters/PageNumberParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
        - $ref: '#/components/parameters/SortByParam'
        - $ref: '#/components/parameters/SortOrderParam'
      responses:
        200:
          description: 'Successfully returned Offer Matches.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboxOfferMatchPageResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/demand_personas/settings/assignment:
    post:
      tags:
        - organization settings
      description: |
        # Authorization
        Required role: `org_admin`

        # Description
        Set offer assignment setting for an organization.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutboxOfferAssignmentSettingUpdateRequest'
      responses:
        204:
          description: "Setting succesfully saved."
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
    get:
      tags:
        - organization settings
      description: |
        # Authorization
        Required role: `org_admin`

        # Description
        Get offer assignment setting for an organization.
      responses:
        200:
          description: Offer assignment setting.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboxOfferAssignmentSettingUpdateResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/sys_admin/demand_personas/{demand_persona_id}/settings/assignment:
    parameters:
      - in: path
        name: demand_persona_id
        schema:
          type: string
          format: uuid
        required: true
        description: ID of an organization.
    post:
      tags:
        - organization settings sys_admin
      description: |
        # Authorization
        Required role: `sys_admin`

        # Description
        Set offer assignment setting for an organization.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutboxOfferAssignmentSettingUpdateRequest'
      responses:
        204:
          description: "Setting succesfully saved."
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
    get:
      tags:
        - organization settings sys_admin
      description: |
        # Authorization
        Required role: `sys_admin`

        # Description
        Get offer assignment setting for an organization.
      responses:
        200:
          description: Offer assignment setting.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboxOfferAssignmentSettingUpdateResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/sys_admin/take_rates/demand_take_rates:
    get:
      tags:
        - take rates
      description: |
        # Authorization
        Required role: `sys_admin`

        # Description
        Get a collection of take rates specific to demand organizations.
      parameters:
        - in: query
          name: demand_persona_id
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: 'Successfully returned demand take rates collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemandTakeRateCollectionResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/sys_admin/take_rates/demand_take_rates/{demand_persona_id}:
    parameters:
      - in: path
        name: demand_persona_id
        schema:
          type: string
          format: uuid
        required: true
        description: ID of an organization.
    post:
      tags:
        - take rates
      description: |
        # Authorization
        Required role: `sys_admin`

        # Description
        Set the take rate specific to a demand organization.

        Note: a null take rate means the system will clear the demand-specific take rate
        and apply the next available take rate (e.g., the regional take rate).

        A take rate of 0 is a take rate of 0%.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemandTakeRateCreateRequest'
      responses:
        204:
          description: 'Successfully set the demand-specific take rate.'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/sys_admin/take_rates/regional_take_rate:
    get:
      tags:
        - take rates
      description: |
        # Authorization
        Required role: `sys_admin`

        # Description
        Get a regional take rate.
      responses:
        200:
          description: 'Successfully returned regional take rate'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionalTakeRateDetailResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
    post:
      tags:
        - take rates
      description: |
        # Authorization
        Required role: `sys_admin`

        # Description
        Set the regional take rate.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionalTakeRateUpdateRequest'
      responses:
        200:
          description: 'Successfully returned regional take rate'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionalTakeRateDetailResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/outbox/referrals:
    post:
      tags:
        - referral outbox
      description: |
        # Authorization
        Required role: `org_admin`

        # Description
        Create a Referral by the Demand organization.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutboxReferralCreateRequest'
      responses:
        201:
          description: "Successfully created Referral"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboxReferralDetailResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
    get:
      # missing query parameters for referral_type, care_type, etc.
      tags:
        - referral outbox
      description: |
        # Authorization
        Required role: `org_admin`

        # Description
        Get a collection of Referrals created by the Demand organization.
      parameters:
        - in: query
          name: supply_persona_id
          schema:
            type: string
            format: uuid
        - in: query
          name: status
          schema:
            $ref: '#/components/schemas/ReferralStatusCore'
        - $ref: '#/components/parameters/ShiftIdQueryParam'
        - $ref: '#/components/parameters/OfferIdQueryParam'
        - in: query
          name: care_type
          schema:
            $ref: '#/components/schemas/CareTypeCore'
        - in: query
          name: referral_type
          schema:
            $ref: '#/components/schemas/ReferralTypeCore'
        - in: query
          name: client_outbox_id
          schema:
            type: string
        - in: query
          name: demand_label
          schema:
            type: string
            description: Referrals associated with any given label set by the demand
              organization.
        - in: query
          name: has_alayacare_authorization
          schema:
            type: boolean
        - $ref: '#/components/parameters/RevisionsQueryParam'
        - in: query
          name: revision_group_id
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/PageNumberParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
        - in: query
          name: sort_by
          schema:
            type: string
            enum:
              - last_modified
              - revision_number
            default: last_modified
        - $ref: '#/components/parameters/SortOrderParam'
      responses:
        200:
          description: 'Successfully returned Referral Outbox Collection'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboxReferralPageResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/outbox/referrals/{referral_id}:
    parameters:
    - $ref: '#/components/parameters/ReferralIdPathParam'
    get:
      tags:
        - referral outbox
      description: |
        # Authorization

        Required role: `org_admin`

        # Description
        Get the details of a Referral created by the Demand organization.
      responses:
        200:
          description: 'Successfully returned Referral Outbox Scalar'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboxReferralDetailResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/outbox/referrals/{referral_id}/cancel:
    parameters:
      - $ref: '#/components/parameters/ReferralIdPathParam'
    post:
      tags:
        - referral outbox
      description: |
        # Authorization
        Required role: `org_admin`

        # Description
        Cancel a Referral created by the Demand Organization.  
        A Referral can only be Cancelled if the status is `assigned` or `processed`.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutboxReferralCancelRequest'
      responses:
        204:
          description: "Successfully marked Referral as Cancelled"
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/outbox/referrals/{referral_id}/update:
    parameters:
      - $ref: '#/components/parameters/ReferralIdPathParam'
    post:
      tags:
        - referral outbox
      description: |
        # Authorization
        Required role: `org_admin`

        # Description
        Update a Referral created by the Demand Organization.

        A Referral can only be updated if
        * It's of type: `service`, and
        * It's the latest revision, and
        * Its status is `assigned` or `processed`.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutboxReferralUpdateRequest'
      responses:
        201:
          description: "Successfully updated Referral"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboxReferralDetailResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/inbox/referrals:
    get:
      tags:
        - referral inbox
      description: |
        # Authorization
        Required role: `org_admin`

        # Description
        Get a collection of Referrals matched to the Supply Organization.
      parameters:
        - in: query
          name: referral_status
          schema:
            $ref: '#/components/schemas/ReferralStatusCore'
        - $ref: '#/components/parameters/OfferIdQueryParam'
        - $ref: '#/components/parameters/ShiftIdQueryParam'
        - $ref: '#/components/parameters/RevisionsQueryParam'
        - $ref: '#/components/parameters/PageNumberParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
        - $ref: '#/components/parameters/SortByParam'
        - $ref: '#/components/parameters/SortOrderParam'
      responses:
        200:
          description: "Successfully returned Referral Inbox Collection."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboxReferralPageResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/inbox/referrals/{referral_id}:
    parameters:
      - $ref: '#/components/parameters/ReferralIdPathParam'
    get:
      tags:
        - referral inbox
      description: |
        # Authorization
        Required role: `org_admin`

        # Description
        Get the anonymized details of Referrals matched to the Supply
        organization. This must contain no PHI.
      responses:
        200:
          description: "Successfully returned Referral Inbox Scalar"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboxReferralDetailResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/inbox/referrals/{referral_id}/mark_processed:
    parameters:
      - $ref: '#/components/parameters/ReferralIdPathParam'
    post:
      tags:
        - referral inbox
      description: |
        # Authorization
        Required role: `org_admin`

        Required referral state: `assigned`

        # Description
        Acknowledges that the Supply organization has received and processed the assigned Referral.
        This will mark the Referral as `processed` and will inform the Demand organization.
      responses:
        204:
          description: "Successfully marked Referral as Processed."
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/inbox/referrals/{referral_id}/cancel:
    parameters:
      - $ref: '#/components/parameters/ReferralIdPathParam'
    post:
      tags:
        - referral inbox
      description: |
        # Authorization
        Required role: `org_admin`

        # Description
        Cancel an Referral after it's assigned to the Supply Organization.  
        A Referral can only be Cancelled if the status is `assigned` or `processed`.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboxReferralCancelRequest'
      responses:
        204:
          description: "Successfully marked Referral as Cancelled"
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/sys_admin/referrals/{referral_id}:
    parameters:
      - $ref: '#/components/parameters/ReferralIdPathParam'
    get:
      tags:
        - referral sys_admin
      description: |
        # Authorization
        Required role: `sys_admin`

        # Description
        Get the details of a Referral.
      responses:
        200:
          description: 'Successfully returned referral details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SysAdminReferralDetailResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/outbox/visits:
    get:
      tags:
        - visit outbox
      description: |
        # Authorization
        Required role: demand `org_admin` who created the associated referral or service.

        # Description
        Get a collection of Visits for a given referral or service.

        One of `referral_id`, `service_id`, or `service_outbox_id` must be provided.
      parameters:
        - $ref: '#/components/parameters/ReferralIdQueryParam'
          required: false
        - $ref: '#/components/parameters/ServiceIdQueryParam'
          required: false
        - in: query
          name: service_outbox_id
          schema:
            type: string
          description: ID of a service in the demand system.
          required: false
        - $ref: '#/components/parameters/PageNumberParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
        - in: query
          name: sort_by
          schema:
            type: string
            enum:
              - last_modified
              - start_at
            default: start_at
        - $ref: '#/components/parameters/SortOrderParam'
      responses:
        200:
          description: "Successfully retrieved a collection of Visits."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboxVisitPageResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/outbox/visits/{visit_id}:
    get:
      tags:
        - visit outbox
      description: |
        # Authorization
        Required role: demand `org_admin` who created the associated referral or service.

        # Description
        Get the details of a Visit for a given Visit ID.
      parameters:
        - $ref: '#/components/parameters/VisitIdPathParam'
      responses:
        200:
          description: "Successfully retrieved a Visit."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboxVisitDetailResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/inbox/visits:
    get:
      tags:
        - visit inbox
      description: |
        # Authorization
        Required role: supply `org_admin` who was assigned the associated referral or service.

        # Description
        Get a collection of Visits for a given referral or service.

        One of `referral_id` or `service_id` must be provided.
      parameters:
        - $ref: '#/components/parameters/ReferralIdQueryParam'
          required: false
        - $ref: '#/components/parameters/ServiceIdQueryParam'
          required: false
        - $ref: '#/components/parameters/PageNumberParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
        - in: query
          name: sort_by
          schema:
            type: string
            enum:
              - last_modified
              - start_at
            default: start_at
        - $ref: '#/components/parameters/SortOrderParam'
      responses:
        200:
          description: "Successfully retrieved a collection of Visits."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboxVisitPageResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/inbox/visits/{visit_id}:
    get:
      tags:
        - visit inbox
      description: |
        # Authorization
        Required role: supply `org_admin` who created or was assigned the visit.

        # Description
        Get the details of a Visit for a given Visit ID.
      parameters:
        - $ref: '#/components/parameters/VisitIdPathParam'
      responses:
        200:
          description: "Successfully retrieved a Visit."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboxVisitDetailResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/inbox/visits/by_inbox_id/{visit_inbox_id}:
    get:
      tags:
        - visit inbox
      description: |
        # Authorization
        Required role: supply `org_admin` who created or was assigned the visit.

        # Description
        Get the details of a Visit for a given inbox Visit ID.
      parameters:
        - in: path
          name: visit_inbox_id
          schema:
            type: string
          description: ID of a visit in the supply system.      
          required: true  
      responses:
        200:
          description: "Successfully retrieved a Visit."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboxVisitDetailResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/inbox/visits/schedule:
    post:
      tags:
        - visit inbox
      description: |
        # Authorization
        Required role: supply `org_admin`.

        # Description
        Schedule a visit by the Supply organization for an associated service or
        referral.

        One of `referral_id` or `service_id` must be provided.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboxVisitScheduleRequest'
      responses:
        201:
          description: "Successfully scheduled a Visit."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboxVisitScheduleResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/inbox/visits/{visit_id}/assign:
    parameters:
      - $ref: '#/components/parameters/VisitIdPathParam'
    post:
      tags:
        - visit inbox
      description: |
        # Authorization
        Required role: supply `org_admin`.

        # Description
        Assign an employee to a visit.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboxVisitAssignRequest'
      responses:
        204:
          description: "Successfully assigned an employee to the visit."
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/inbox/visits/{visit_id}/unassign:
    parameters:
      - $ref: '#/components/parameters/VisitIdPathParam'
    post:
      tags:
        - visit inbox
      description: |
        # Authorization
        Required role: supply `org_admin`.

        # Description
        Unassign an employee from a visit.
      responses:
        204:
          description: "Successfully unassigned the employee from the visit."
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/inbox/visits/{visit_id}/delete:
    parameters:
      - $ref: '#/components/parameters/VisitIdPathParam'
    post:
      tags:
        - visit inbox
      description: |
        # Authorization
        Required role: supply `org_admin`.

        # Description
        Delete a visit of a service referral. The supply organization deleting the visit
        must be identical to the one that scheduled the original visit.
      responses:
        204:
          description: "Successfully deleted the visit."
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/inbox/visits/{visit_id}/reschedule:
    parameters:
      - $ref: '#/components/parameters/VisitIdPathParam'
    post:
      tags:
        - visit inbox
      description: |
        # Authorization
        Required role: supply `org_admin`.

        # Description
        Reschedule a visit of a service referral. The supply organization rescheduling
        the visit must be identical to the one that scheduled the original visit.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboxVisitRescheduleRequest'
      responses:
        200:
          description: "Successfully rescheduled visit."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboxVisitRescheduleResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/inbox/visits/{visit_id}/tasks/complete:
    parameters:
      - $ref: '#/components/parameters/VisitIdPathParam'
    post:
      tags:
        - visit inbox
      description: |
        # Authorization
        Required role: supply `org_admin`.

        # Description
        Complete one (or more) visit task for the specified visit.<br><br>
        Subsequent posts for the same task id updates the task.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboxVisitTaskCompletionRequest'
      responses:
        200:
          description: "Successfully completed visit tasks."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboxVisitTaskCollectionResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/sys_admin/visits:
    get:
      tags:
        - visit sys_admin
      description: |
        # Authorization
        Required role: `sys_admin`.

        # Description
        Get a collection of Visits.
      parameters:
        - in: query
          name: id
          schema:
            type: string
            format: uuid
        - in: query
          name: inbox_id
          schema:
            type: string
        - in: query
          name: outbox_id
          schema:
            type: string
        - in: query
          name: demand_persona_id
          schema:
            type: string
            format: uuid
        - in: query
          name: supply_persona_id
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/ReferralIdQueryParam'
          required: false
        - $ref: '#/components/parameters/ServiceIdQueryParam'
          required: false
        - in: query
          name: service_outbox_id
          schema:
            type: string
          description: ID of a service in the demand system.
          required: false
        - $ref: '#/components/parameters/PageNumberParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
        - in: query
          name: sort_by
          schema:
            type: string
            enum:
              - last_modified
              - start_at
            default: start_at
        - $ref: '#/components/parameters/SortOrderParam'
      responses:
        200:
          description: "Successfully retrieved a collection of Visits."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SysAdminVisitPageResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/sys_admin/visits/{visit_id}:
    parameters:
      - $ref: '#/components/parameters/VisitIdPathParam'
    get:
      tags:
        - visit sys_admin
      description: |
        # Authorization
        Required role: `sys_admin`.

        # Description
        Get the details of a Visit.
      responses:
        200:
          description: 'Successfully returned visit details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SysAdminVisitDetailResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/outbox/work_sessions:
    parameters:
      - in: query
        name: visit_id
        schema:
          type: string
        description: ID of a visit.
        required: false
      - in: query
        name: visit_outbox_id
        schema:
          type: string
        description: ID of a visit in the demand system.
        required: false
    get:
      tags:
        - work session outbox
      description: |
        # Authorization
        Required role: demand `org_admin` who created the associated referral.

        # Description
        Get a collection of Work Sessions for a given visit.

        One of `visit_id` or `visit_outbox_id` must be provided.
      # Filters TBD.
      responses:
        200:
          description: "Successfully retrieved a collection of Work Sessions."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboxWorkSessionPageResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/inbox/work_sessions/start:
    post:
      tags:
        - work session inbox
      description: |
        # Authorization
        Required role: `org_admin` assigned to the associated referral.

        # Description
        Start a Work Session for a given visit.

        One of `visit_id` or `visit_inbox_id` must be provided.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboxWorkSessionStartRequest'
      responses:
        201:
          description: "Successfully started a Work Session."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboxWorkSessionStartResponse'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

  /v1/inbox/work_sessions/end:
    post:
      tags:
        - work session inbox
      description: |
        # Authorization
        Required role: `org_admin` who started the Work Session.

        # Description
        End a Work Session.
        
        * One of `work_session_id` or `inbox_id` must be provided, AND
        * One of `visit_id` or `visit_inbox_id` must be provided.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboxWorkSessionEndRequest'
      responses:
        204:
          description: "Successfully ended a Work Session."
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OfferApiFunction.Arn}:live/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"

      # By default, All endpoints are using the CognitoAuthorizer
security:
  - CognitoAuthorizer: [ ]

x-amazon-apigateway-request-validators:
  body:
    validateRequestBody: true
    validateRequestParameters: false
  params:
    validateRequestBody: false
    validateRequestParameters: true
  params-and-body:
    validateRequestBody: true
    validateRequestParameters: true

# By default, only the params (query params & headers will be validated)
x-amazon-apigateway-request-validator: "params"

x-amazon-apigateway-gateway-responses:
  BAD_REQUEST_BODY:
    statusCode: 400
    responseTemplates:
      application/json: '{"message": $context.error.messageString, "description": "$context.error.validationErrorString"}'

components:
  parameters:
    OfferIdPathParam:
      in: path
      name: offer_id
      schema:
        type: string
        format: uuid
      required: true
      description: ID of an offer
    VisitIdPathParam:
      in: path
      name: visit_id
      schema:
        type: string
        format: uuid
      required: true
      description: ID of a visit.
    OfferIdQueryParam:
      in: query
      name: offer_id
      schema:
        type: string
        format: uuid
    ReferralIdQueryParam:
      in: query
      name: referral_id
      schema:
        type: string
        format: uuid
    ReferralIdPathParam:
      in: path
      name: referral_id
      schema:
        type: string
        format: uuid
      required: true
    ServiceIdQueryParam:
      in: query
      name: service_id
      schema:
        type: string
        format: uuid
    ShiftIdQueryParam:
      in: query
      name: shift_id
      schema:
        type: string
        format: uuid
    RevisionsQueryParam:
      in: query
      name: revisions
      schema:
        type: string
        description: Filter in all revisions for a given referral, or only the latest
          revision, or only the archived revision(s).
        enum:
          - all
          - latest
          - archived
        default: latest
    ItemsPerPageParam:
      in: query
      name: items_per_page
      schema:
        $ref: '#/components/schemas/ItemsPerPageCore'
    PageNumberParam:
      in: query
      name: page
      schema:
        $ref: '#/components/schemas/PageNumberCore'
    SortByParam:
      in: query
      name: sort_by
      schema:
        $ref: '#/components/schemas/SortByCore'
    SortOrderParam:
      in: query
      name: sort_order
      schema:
        $ref: '#/components/schemas/SortOrderCore'

  schemas:
    StatusHealthzResponse:
      type: object
      properties:
        status:
          type: string
      required:
        - status

    OutboxOfferCore:
      # Core fields on an offer expected to be present on requests and responses.
      type: object
      properties:
        care_type:
          $ref: '#/components/schemas/CareTypeCore'
        offer_type:
          $ref: '#/components/schemas/OfferTypeCore'
        expires_at:
          type: string
          format: date-time
        comment:
          type: string
        demand_labels:
          type: array
          items:
            type: string
          minItems: 1
      required:
        - care_type
        - offer_type
        - expires_at

    OutboxOfferCreateRequest:
      type: object
      properties:
        offer:
          $ref: '#/components/schemas/OutboxOfferCore'
        alayacare:
          $ref: '#/components/schemas/OutboxAlayaCareCore'
        case_manager:
          $ref: '#/components/schemas/CaseManagerCore'
        direct_supply_persona_ids:
          description: |
            Identifiers of one (or more) supply organization for direct-to-supplier
            matching.
          type: array
          items:
            type: string
            format: uuid
        price:
          $ref: '#/components/schemas/OutboxOfferPriceCore'
        client:
          $ref: '#/components/schemas/OutboxOfferClientRequest'
        service:
          $ref: '#/components/schemas/OutboxServiceRequest'
        visits:
          type: array
          items:
            $ref: '#/components/schemas/OutboxOfferVisitRequest'
      required:
        - offer
        - price
        - client
        - service

    OutboxShiftOfferCore:
      # Core fields on a shift offer.
      type: object
      properties:
        care_type:
          $ref: '#/components/schemas/CareTypeCore'
        expires_at:
          type: string
          format: date-time
        comment:
          type: string
        demand_labels:
          type: array
          items:
            type: string
          minItems: 1
      required:
        - care_type
        - expires_at

    OutboxShiftOfferItem:
      # Core fields on an offer that is part of a shift offer.
      type: object
      properties:
        price:
          $ref: '#/components/schemas/OutboxOfferPriceCore'
        client:
          $ref: '#/components/schemas/OutboxOfferClientRequest'
        service:
          $ref: '#/components/schemas/OutboxServiceRequest'
        visits:
          type: array
          items:
            $ref: '#/components/schemas/OutboxOfferVisitRequest'
      required:
        - price
        - client
        - service
        - visits

    OutboxShiftOfferCreateRequest:
      type: object
      properties:
        offer:
          $ref: '#/components/schemas/OutboxShiftOfferCore'
        direct_supply_persona_ids:
          description: |
            Identifiers of one (or more) supply organization for direct-to-supplier
            matching.
          type: array
          items:
            type: string
            format: uuid
        case_manager:
          $ref: '#/components/schemas/CaseManagerCore'
        items:
          type: array
          items:
            $ref: '#/components/schemas/OutboxShiftOfferItem'
      required:
        - offer
        - items

    OutboxShiftOfferCreateResponse:
      type: object
      properties:
        shift:
          title: OutboxShiftOfferCreateShiftResponse
          description: The `shift` object included in the response when creating a shift offer.
          type: object
          properties:
            id:
              type: string
              format: uuid
          required:
            - id
        items:
          type: array
          items:
            title: OutboxShiftOfferCreateItemsResponse
            description: The `item` objects included in the response when creating a shift offer.
            type: object
            properties:
              offer:
                title: OutboxShiftOfferCreateItemOfferResponse
                description: The `offer` object included in the response when creating a shift offer.
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                required:
                  - id
              visits:
                title: OutboxShiftOfferCreateItemVisitsResponse
                description: The `visits` object included in the response when creating a shift offer.
                type: array
                items:
                  properties:
                    id:
                      type: string
                      format: uuid
                    outbox_id:
                      type: string
                      minLength: 1
                  required:
                    - id
                    - outbox_id
            required:
              - offer
              - visits
      required:
        - shift
        - items

    OutboxOfferCollectionResponse:
      description: |
        API response of an offer on the outbox API.
      type: object
      properties:
        offer:
          $ref: '#/components/schemas/OutboxOfferExtendedCore'
        client:
          title: OutboxOfferCollectionClientResponse
          type: object
          properties:
            outbox_id:
              type: string
            demographics:
              $ref: '#/components/schemas/DemographicLeanCore'
          required:
            - demographics
            - outbox_id
        service:
          title: OutboxOfferServiceLeanResponse
          type: object
          properties:
            outbox_id:
              type: string
            name:
              type: string
              minLength: 1
          required:
            - name
            - outbox_id
        response_counts:
          $ref: '#/components/schemas/OfferResponseCountsCore'
      required:
        - offer
        - client
        - service
        - response_counts

    OutboxOfferExtendedCore:
      allOf:
        - $ref: '#/components/schemas/OutboxOfferCore'
        - $ref: '#/components/schemas/OfferReasonCodeCore'
        - type: object
          properties:
            id:
              type: string
              format: uuid
            shift_id:
              type: string
              format: uuid
            status:
              $ref: '#/components/schemas/OfferStatusCore'
            start_at:
              type: string
              format: date-time
              description: Derived from the visits
            end_at:
              type: string
              format: date-time
              description: Derived from the visits
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
          required:
            - id
            - status
            - start_at
            - end_at
            - created_at

    OfferResponseCountsCore:
      type: object
      properties:
        modified_at:
          type: string
          format: date-time
          description: The creation or last update of the offer or any responses to it.
        sent:
          type: integer
          minimum: 0
          description: The number of recipients to whom the offer was sent.
        accepted:
          type: integer
          minimum: 0
          description: The number of accepted offers.
        declined:
          type: integer
          minimum: 0
          description: The number of declined offers.

    OutboxOfferDetailResponse:
      # Full blown representation of an offer, with related/nested entities
      allOf:
        - type: object
          properties:
            offer:
              $ref: '#/components/schemas/OutboxOfferExtendedCore'
            demand:
              $ref: '#/components/schemas/OrganizationLeanCore'
            supply:
              $ref: '#/components/schemas/OrganizationLeanCore'
            alayacare:
              $ref: '#/components/schemas/OutboxAlayaCareCore'
            case_manager:
              $ref: '#/components/schemas/CaseManagerCore'
            direct_supply_persona_ids:
              description: |
                Identifiers of one (or more) supply organization for direct-to-supplier
                matching.
              type: array
              items:
                type: string
                format: uuid
            price:
              $ref: '#/components/schemas/OutboxOfferPriceCore'
            client:
              $ref: '#/components/schemas/OutboxOfferClientResponse'
            service:
              $ref: '#/components/schemas/OutboxServiceResponse'
            visits:
              type: array
              items:
                $ref: '#/components/schemas/OutboxOfferVisitResponse'
          required:
            - offer
            - demand
            - price
            - client
            - service

    OutboxOfferMatchCollectionResponse:
      description: |
        API response for the representation of Offer Matches on the outbox API.
      type: object
      properties:
        match:
          $ref: '#/components/schemas/OfferMatchCore'
        supply:
          # better to call destination (CCAC)?
          $ref: '#/components/schemas/OrganizationLeanCore'

    OutboxOfferPageResponse:
      allOf:
        - $ref: '#/components/schemas/PageCore'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/OutboxOfferCollectionResponse'

    OutboxOfferMatchPageResponse:
      allOf:
        - $ref: '#/components/schemas/PageCore'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/OutboxOfferMatchCollectionResponse'

    InboxOfferCollectionResponse:
      description: |
        API response for the core representation of an offer response on the inbox API.
      type: object
      properties:
        offer:
          $ref: '#/components/schemas/InboxOfferCore'
        match:
          $ref: '#/components/schemas/OfferMatchCore'

    InboxReferralCollectionResponse:
      description: |
        API response for the core representation of a referral response on the inbox API.
      type: object
      properties:
        referral:
          $ref: '#/components/schemas/InboxReferralCore'
        revision:
          title: InboxReferralCollectionRevisionResponse
          type: object
          properties:
            revision_group_id:
              type: string
              format: uuid
            revision_number:
              type: integer
              minimum: 1
          required:
            - revision_group_id
            - revision_number
      required:
        - referral
        - revision

    InboxOfferCore:
      description: |
        Core representation of an offer on the inbox API.
        Meant to be used in the nested `offer` in a top level (API) response schema.
      allOf:
        - $ref: '#/components/schemas/OfferReasonCodeCore'
        - type: object
          properties:
            id:
              type: string
              format: uuid
            shift_id:
              type: string
              format: uuid
            care_type:
              $ref: '#/components/schemas/CareTypeCore'
            offer_type:
              $ref: '#/components/schemas/OfferTypeCore'
            expires_at:
              type: string
              format: date-time
            start_at:
              type: string
              format: date-time
            end_at:
              type: string
              format: date-time
            comment:
              type: string
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
          required:
            - id
            - care_type
            - offer_type
            - expires_at
            - start_at
            - end_at
            - created_at

    InboxOfferDetailResponse:
      description: |
        API response for the anonymous representation of an offer on the inbox API.
        Similarly to the `InboxOfferCore`, this schema is meant to be used in the nested `offer`
        in a top level (API) response schema, e.g. the `InboxOfferScalarApiResponse`
        This includes everything from the `InboxOfferCore` along with some additional information
        on the client, service and visits.
        Not all client information is included here, hence the "anon" (anonymous) prefix.
      type: object
      properties:
        offer:
          $ref: '#/components/schemas/InboxOfferCore'
        alayacare:
          $ref: '#/components/schemas/InboxOfferAlayaCareResponse'
        case_manager:
          $ref: '#/components/schemas/CaseManagerCore'
        price:
          $ref: '#/components/schemas/PriceCore'
        client:
          title: InboxOfferDetailClientResponse
          type: object
          properties:
            address:
              $ref: '#/components/schemas/AddressAnonCore'
            allergies:
              type: array
              items:
                $ref: '#/components/schemas/AllergyCore'
            risks:
              type: array
              items:
                $ref: '#/components/schemas/RiskCore'
            custom_fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldCore'
          required:
            - address
        service:
          title: InboxOfferDetailServiceResponse
          allOf:
            - $ref: '#/components/schemas/ServiceCore'
            - type: object
              properties:
                id:
                  type: string
                  format: uuid
                use_client_address:
                  type: boolean
                address:
                  $ref: '#/components/schemas/AddressAnonCore'
              required:
                - id
        visits:
          type: array
          items:
            $ref: '#/components/schemas/InboxOfferVisitResponse'
        match:
          $ref: '#/components/schemas/OfferMatchCore'
        demand:
          # better to call sender (CCAC)? or demand_persona?
          $ref: '#/components/schemas/OrganizationLeanCore'
      required:
        - offer
        - price
        - match
        - demand
        - client
        - service

    SortByCore:
      type: string
      enum:
        - last_modified
      default: last_modified

    SortOrderCore:
      type: string
      enum:
        - asc
        - desc
      default: desc

    InboxOfferPageResponse:
      allOf:
        - $ref: '#/components/schemas/PageCore'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/InboxOfferCollectionResponse'
          required:
            - items

    OfferMatchCore:
      description: |
        Core representation of an Offer Match.
        Meant to be used in the nested `match` in a top level (API) response schema.
      allOf:
        - $ref: '#/components/schemas/OfferMatchReasonCodeCore'
        - type: object
          properties:
            id:
              type: string
              format: uuid
            response:
              $ref: '#/components/schemas/OfferMatchResponseCore'
            status:
              $ref: '#/components/schemas/OfferMatchStatusCore'
            # TODO: could be interesting to encapsulate the timestamp fields in a schema
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
          required:
            - id
            - response
            - status
            - created_at

    OutboxOfferCloseRequest:
      allOf:
        - $ref: '#/components/schemas/OfferReasonCodeCore'

    OfferReasonCodeCore:
      description: |
        `reason_code` and `reason_comment` associated to a cancelled or closed offer.
      type: object
      properties:
        reason_code:
          type: string
          enum:
          - datetime_change
          - client_request
          - client_hospitalization
          - client_passed_away
          - client_refused_service
        reason_comment:
          type: string

    OfferMatchReasonCodeCore:
      description: |
        `reason_code` associated with a declined Offer Match.
      type: object
      properties:
        reason_code:
          type: string
          # TODO: AM-488: we will leave this as free-form for now
          # as we leverage AlayaCare LHIN reason codes
          #
          # enum:
          # - no_employee_availability
          # - no_employee_in_region
          # - no_employee_with_skills
          # - offer_price
          # - covid_19
          # - other
        comment:
            type: string

    InboxOfferDeclineRequest:
      allOf:
        - $ref: '#/components/schemas/OfferMatchReasonCodeCore'

    InboxOfferAcceptRequest:
      type: object
      properties:
        comment:
          type: string

    OutboxOfferAssignRequest:
      type: object
      properties:
        offer_match_id:
          type: string
          format: uuid
      required:
        - offer_match_id

    OfferStatusCore:
      type: string
      enum:
        - open # wrapper for created + matched + sent + accepted
        - assigned
        - closed
        - declined_by_all
        - expired

    OfferMatchResponseCore:
      type: string
      enum:
        - pending
        - accepted
        - declined

    OfferMatchStatusCore:
      type: string
      nullable: true
      enum:
        - open
        - expired
        - closed
        - assigned
        - fulfilled

    CareTypeCore:
      # sync this with the organization specs
      type: string
      enum:
        - psw
        - nursing

    OfferTypeCore:
      type: string
      enum:
        - visit
        - service
        # - recurrence

    OutboxOfferPriceCore:
      type: object
      properties:
        default:
          $ref: '#/components/schemas/PriceCore'
        custom:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/PriceCore'
              - type: object
                properties:
                  supply_persona_id:
                    type: string
                    format: uuid
                required:
                  - supply_persona_id
      required:
        - default

    PriceCore:
      type: object
      properties:
        rate:
          type: number
          format: decimal
          description: The dollar amount for offer per unit.
          example: 30.00
        unit:
          type: string
          description: The unit for the rate.
          enum:
            - per_visit
            - per_hour
            - amount
      required:
        - rate
        - unit

    PageCore:
      description: Root page schema for returning collections.
      type: object
      properties:
        page:
          $ref: '#/components/schemas/PageNumberCore'
        items_per_page:
          $ref: '#/components/schemas/ItemsPerPageCore'
        total_items:
          type: integer
          minimum: 0
        total_pages:
          type: integer
          minimum: 0
      required:
        - page
        - items_per_page
        - total_items
        - total_pages

    PageNumberCore:
      type: integer
      minimum: 1
      default: 1

    ItemsPerPageCore:
      type: integer
      minimum: 1
      default: 100

    OrganizationLeanCore:
      # sync this with the organization specs
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
      required:
        - id
        - name

    InboxReferralVisitResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
        instructions:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/InboxReferralVisitTaskResponse'
      required:
        - id
        - start_at
        - end_at

    OutboxOfferVisitRequest:
      type: object
      properties:
        outbox_id:
          type: string
          minLength: 1
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
        instructions:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/OutboxOfferVisitTaskRequest'
      required:
        - outbox_id
        - start_at
        - end_at

    OutboxReferralVisitRequest:
      type: object
      properties:
        outbox_id:
          type: string
          minLength: 1
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
        instructions:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/OutboxReferralVisitTaskRequest'
      required:
        - outbox_id
        - start_at
        - end_at

    OutboxOfferVisitResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        outbox_id:
          type: string
          minLength: 1
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
        instructions:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/OutboxOfferVisitTaskResponse'
      required:
        - id
        - outbox_id
        - start_at
        - end_at

    OutboxReferralVisitResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        outbox_id:
          type: string
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
        instructions:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/OutboxReferralVisitTaskResponse'
      required:
        - id
        - start_at
        - end_at

    InboxOfferVisitResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
        instructions:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/InboxOfferVisitTaskResponse'
      required:
        - id
        - start_at
        - end_at

    OutboxOfferVisitTaskRequest:
      type: object
      properties:
        outbox_id:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
        description:
          type: string
        is_required:
          type: boolean
      required:
        - outbox_id
        - name
        - is_required

    OutboxOfferVisitTaskResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        outbox_id:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
        description:
          type: string
        is_required:
          type: boolean
      required:
        - id
        - outbox_id
        - name
        - is_required

    InboxOfferVisitTaskResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
        description:
          type: string
        is_required:
          type: boolean
      required:
        - id
        - name
        - is_required

    InboxReferralVisitTaskResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
        description:
          type: string
        is_required:
          type: boolean
      required:
        - id
        - name
        - is_required

    OutboxReferralVisitTaskRequest:
      type: object
      properties:
        outbox_id:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
        description:
          type: string
        is_required:
          type: boolean
      required:
        - outbox_id
        - name
        - is_required

    OutboxReferralVisitTaskResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        outbox_id:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
        description:
          type: string
        is_required:
          type: boolean
      required:
        - id
        - outbox_id
        - name
        - is_required

    ServiceCore:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
        instructions:
          # CCAC includes goals and other items in ServiceInstructions
          type: string
        skills:
          # should this live here or at root level or client level?
          # should this be a string or list of strings or list of objects?
          type: array
          items:
            type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldCore'
      # CCAC service includes priority, some other codes, and nests Frequencies in Service
      required:
        - name

    OutboxServiceRequest:
      allOf:
        - $ref: '#/components/schemas/ServiceCore'
        - type: object
          properties:
            outbox_id:
              type: string
              minLength: 1
            use_client_address:
              type: boolean
              description: |
                For informational purposes only. This is an explicit indicator to the
                supply organization whether the client address should be used as the
                service address.

                Setting to `true` means the client address should be used for the
                service address. So, if a service address is also provided in the
                request, it can safely be ignored.

                Not providing this or setting to `false` means the specified
                service address should be used instead.
            address:
              $ref: '#/components/schemas/AddressCore'
            referral_only_custom_fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldCore'
          required:
            - outbox_id

    OutboxServiceResponse:
      allOf:
        - $ref: '#/components/schemas/ServiceCore'
        - type: object
          properties:
            id:
              type: string
              format: uuid
            outbox_id:
              type: string
              minLength: 1
            use_client_address:
              type: boolean
            address:
              $ref: '#/components/schemas/AddressCore'
            referral_only_custom_fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldCore'
          required:
            - id
            - outbox_id

    ClientCore:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/AddressCore'
        contacts:
          # separate personal, medical contacts like CCAC?
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                # format: uuid
              first_name:
                type: string
              last_name:
                type: string
              address:
                type: object
                properties:
                  city:
                    type: string
                  state:
                    type: string
                  zip:
                    type: string
                  country:
                    type: string
                  name:
                    type: string
                  address:
                    type: string
                  address_suite:
                    type: string
                  latitude:
                    type: number
                    format: double
                    minimum: -90
                    maximum: 90
                  longitude:
                    type: number
                    format: double
                    minimum: -180
                    maximum: 180
              email:
                type: string
                format: email
              phone_number:
                type: string
              language:
                # should this be enum?
                type: string
              relationship:
                # should this be enum?
                type: string
        demographics:
          type: object
          properties:
            first_name:
              type: string
              minLength: 1
            last_name:
              type: string
              minLength: 1
            email:
              type: string
              format: email
            phone_number:
              type: string
            date_of_birth:
              type: string
              format: date
            gender:
              # should this be enum?
              type: string
            language:
              # should this be enum?
              type: string
              # health card, etc?
          required:
            - first_name
            - last_name
        allergies:
          type: array
          items:
            $ref: '#/components/schemas/AllergyCore'
        risks:
          type: array
          items:
            $ref: '#/components/schemas/RiskCore'
        diagnoses:
          type: array
          items:
            type: object
            # Based on AlayaCare: medical_history.health_history.current_medical_history
            properties:
              name:
                # AlayaCare calls this diagnosis, combines CCAC code and description
                type: string
              description:
                # AlayaCare doesn't use this for the CCAC
                type: string
              start_date:
                type: string
                format: date
        surgeries:
          type: array
          items:
            # Based on AlayaCare: medical_history.surgery.past_surgery_history
            type: object
            properties:
              name:
                # AlayaCare combines CCAC code and description
                type: string
              description:
                # AlayaCare combines CCAC location and surgeon
                type: string
              start_date:
                type: string
                format: date
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldCore'
      required:
        - demographics
        - address

    InboxClientResponse:
      allOf:
        - $ref: '#/components/schemas/ClientCore'
        - type: object
          properties:
            id:
              type: string
              format: uuid
          required:
            - id

    OutboxOfferClientRequest:
      allOf:
        - $ref: '#/components/schemas/ClientCore'
        - type: object
          properties:
            outbox_id:
              type: string
              minLength: 1
            referral_only_custom_fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldCore'
          required:
            - outbox_id

    OutboxReferralClientRequest:
      allOf:
        - $ref: '#/components/schemas/ClientCore'
        - type: object
          properties:
            outbox_id:
              type: string
              minLength: 1
          required:
            - outbox_id

    OutboxOfferClientResponse:
      allOf:
        - $ref: '#/components/schemas/ClientCore'
        - type: object
          properties:
            outbox_id:
              type: string
              minLength: 1
            referral_only_custom_fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldCore'
          required:
            - outbox_id

    OutboxReferralClientResponse:
      allOf:
        - $ref: '#/components/schemas/ClientCore'
        - type: object
          properties:
            id:
              type: string
              format: uuid
            outbox_id:
              type: string
              minLength: 1
          required:
            - id
            - outbox_id

    DemographicLeanCore:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
        last_name:
          type: string
          minLength: 1
      required:
        - first_name
        - last_name

    RiskCore:
      type: object
      properties:
        name:
          type: string
        category:
          # TODO: We should define a list of valid risk categories
          type: string
          example: "allergy"
        severity:
          # number ? allergy severity is a string ?
          type: integer
        start_date:
          # this might be unclear
          type: string
          format: date

    AllergyCore:
      type: object
      # Based on AlayaCare: medical_history.Allergies.allergies_list
      properties:
        # different schemas for CCAC and AlayaCare
        name:
          type: string
        category:
          type: string
        severity:
          type: string
        start_date:
          type: string
          format: date
        # AlayaCare has a treatment field?

    AddressAnonCore:
      type: object
      properties:
        city:
          type: string
          minLength: 1
        state:
          type: string
          minLength: 1
        zip:
          type: string
          minLength: 1
        country:
          type: string
          minLength: 1
        approx_latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
        approx_longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
        approx_radius_meters:
          type: number
          format: double
          minimum: 0
      required:
        - city
        - state
        - zip
        - country

    AddressCore:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
          minLength: 1
        address_suite:
          type: string
        city:
          type: string
          minLength: 1
        state:
          type: string
          minLength: 1
        zip:
          type: string
          minLength: 1
        country:
          type: string
          minLength: 1
        latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
        longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
      required:
        - address
        - city
        - state
        - zip
        - country

    OutboxOfferAssignmentSettingUpdateRequest:
      type: object
      properties:
        offer_assignment:
          type: string
          enum:
          - auto
          - manual
      required:
        - offer_assignment

    OutboxOfferAssignmentSettingUpdateResponse:
      type: object
      properties:
        offer_assignment:
          type: string
          enum:
            - auto
            - manual
      required:
        - offer_assignment

    TakeRateCore:
      type: number
      format: decimal
      minimum: 0
      maximum: 1
      description: |
        A percentage of the offer price set by demand, represented by a fraction
        between 0 and 1. For example, a regional take rate of 0.1 is 10%.

    DemandTakeRateCore:
      type: object
      properties:
        demand_persona_id:
          type: string
          format: uuid
        rate:
          $ref: '#/components/schemas/TakeRateCore'
      required:
        - demand_persona_id
        - rate

    RegionalTakeRateUpdateRequest:
      type: object
      properties:
        rate:
          $ref: '#/components/schemas/TakeRateCore'
      required:
        - rate

    RegionalTakeRateDetailResponse:
      type: object
      properties:
        rate:
          $ref: '#/components/schemas/TakeRateCore'
      required:
        - rate

    DemandTakeRateCreateRequest:
      type: object
      properties:
        rate:
          $ref: '#/components/schemas/TakeRateCore'

    DemandTakeRateCollectionResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/DemandTakeRateCore'

    OutboxReferralCreateRequest:
      type: object
      properties:
        referral:
          type: object
          properties:
            care_type:
              $ref: '#/components/schemas/CareTypeCore'
            referral_type:
              $ref: '#/components/schemas/ReferralTypeCore'
            comment:
              type: string
            demand_labels:
              type: array
              items:
                type: string
              minItems: 1
          required:
            - care_type
            - referral_type
        supply_persona_id:
          type: string
          format: uuid
          description: The supply organization to which the referral is destined.
        alayacare:
          $ref: '#/components/schemas/OutboxAlayaCareCore'
        case_manager:
          $ref: '#/components/schemas/CaseManagerCore'
        price:
          $ref: '#/components/schemas/PriceCore'
        client:
          $ref: '#/components/schemas/OutboxReferralClientRequest'
        service:
          title: OutboxReferralServiceCreateRequest
          type: object
          properties:
            outbox_id:
              type: string
              minLength: 1
            use_client_address:
              type: boolean
              description: |
                For informational purposes only. This is an explicit indicator to the
                supply organization whether the client address should be used as the
                service address.

                Setting to `true` means the client address should be used for the
                service address. So, if a service address is also provided in the
                request, it can safely be ignored.

                Not providing this or setting to `false` means the specified
                service address should be used instead.
            address:
              $ref: '#/components/schemas/AddressCore'
            name:
              type: string
              minLength: 1
            start_at:
              type: string
              format: date-time
            end_at:
              type: string
              format: date-time
            instructions:
              type: string
            skills:
              type: array
              items:
                type: string
            custom_fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldCore'
          required:
            - outbox_id
            - name
        visits:
          type: array
          items:
            $ref: '#/components/schemas/OutboxReferralVisitRequest'
      required:
        - referral
        - supply_persona_id
        - price
        - client
        - service

    OutboxReferralUpdateRequest:
      properties:
        referral:
          title: OutboxReferralUpdateReferralRequest
          type: object
          properties:
            comment:
              type: string
            demand_labels:
              type: array
              items:
                type: string
              minItems: 1
        supply_persona_id:
          type: string
          format: uuid
          description: The supply organization to which the referral is destined.
        alayacare:
          $ref: '#/components/schemas/OutboxAlayaCareCore'
        case_manager:
          $ref: '#/components/schemas/CaseManagerCore'
        price:
          $ref: '#/components/schemas/PriceCore'
        client:
          $ref: '#/components/schemas/OutboxReferralClientRequest'
        service:
          title: OutboxReferralUpdateServiceRequest
          type: object
          properties:
            outbox_id:
              type: string
              minLength: 1
            use_client_address:
              type: boolean
              description: |
                For informational purposes only. This is an explicit indicator to the
                supply organization whether the client address should be used as the
                service address.

                Setting to `true` means the client address should be used for the
                service address. So, if a service address is also provided in the
                request, it can safely be ignored.

                Not providing this or setting to `false` means the specified
                service address should be used instead.
            address:
              $ref: '#/components/schemas/AddressCore'
            name:
              type: string
              minLength: 1
            start_at:
              type: string
              format: date-time
            end_at:
              type: string
              format: date-time
            instructions:
              type: string
            skills:
              type: array
              items:
                type: string
            custom_fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldCore'
          required:
            - outbox_id
            - name
        visits:
          type: array
          items:
            $ref: '#/components/schemas/OutboxReferralVisitRequest'
        revision:
          title: OutboxReferralUpdateRevisionRequest
          type: object
          properties:
            reasons:
              type: array
              items:
                type: string
            comment:
              type: string
          required:
            - reasons
      required:
        - referral
        - supply_persona_id
        - price
        - client
        - service
        - revision

    OutboxReferralCollectionResponse:
      description: |
        API response of an referral on the outbox API.
      type: object
      properties:
        referral:
          $ref: '#/components/schemas/OutboxReferralCore'
        supply:
          $ref: '#/components/schemas/OrganizationLeanCore'
        client:
          title: OutboxReferralCollectionClientResponse
          type: object
          properties:
            outbox_id:
              type: string
            demographics:
              $ref: '#/components/schemas/DemographicLeanCore'
          required:
            - outbox_id
            - demographics
        service:
          title: OutboxReferralCollectionServiceResponse
          type: object
          properties:
            outbox_id:
              type: string
            name:
              type: string
              minLength: 1
          required:
            - name
            - outbox_id
        revision:
          title: OutboxReferralCollectionRevisionResponse
          type: object
          properties:
            revision_group_id:
              type: string
              format: uuid
            revision_number:
              type: integer
              minimum: 1
            revision_reasons:
              type: array
              items:
                type: string
            revision_comment:
              type: string
          required:
            - revision_group_id
            - revision_number
      required:
        - referral
        - supply
        - client
        - service
        - revision

    OutboxReferralCore:
      allOf:
        - $ref: '#/components/schemas/ReferralReasonCodeCore'
        - type: object
          properties:
            id:
              type: string
              format: uuid
            offer_id:
              type: string
              format: uuid
            shift_id:
              type: string
              format: uuid
            care_type:
              $ref: '#/components/schemas/CareTypeCore'
            referral_type:
              $ref: '#/components/schemas/ReferralTypeCore'
            comment:
              type: string
            demand_labels:
              type: array
              items:
                type: string
              minItems: 1
            status:
              $ref: '#/components/schemas/ReferralStatusCore'
            start_at:
              type: string
              format: date-time
              description: Derived from the visits
            end_at:
              type: string
              format: date-time
              description: Derived from the visits
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
          required:
            - id
            - care_type
            - referral_type
            - status
            - start_at
            - end_at
            - created_at

    SysAdminReferralDetailResponse:
      allOf:
        - type: object
          properties:
            referral:
              $ref: '#/components/schemas/OutboxReferralCore'
            demand:
              $ref: '#/components/schemas/OrganizationLeanCore'
            supply:
              $ref: '#/components/schemas/OrganizationLeanCore'
            alayacare:
              $ref: '#/components/schemas/OutboxAlayaCareCore'
            case_manager:
              $ref: '#/components/schemas/CaseManagerCore'
            price:
              $ref: '#/components/schemas/PriceCore'
            client:
              $ref: '#/components/schemas/OutboxReferralClientResponse'
            service:
              title: SysAdminReferralServiceDetailResponse
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                outbox_id:
                  type: string
                  minLength: 1
                use_client_address:
                  type: boolean
                address:
                  $ref: '#/components/schemas/AddressCore'
                name:
                  type: string
                  minLength: 1
                start_at:
                  type: string
                  format: date-time
                end_at:
                  type: string
                  format: date-time
                instructions:
                  type: string
                skills:
                  type: array
                  items:
                    type: string
                custom_fields:
                  type: array
                  items:
                    $ref: '#/components/schemas/CustomFieldCore'
              required:
                - id
                - outbox_id
                - name
            visits:
              type: array
              items:
                $ref: '#/components/schemas/OutboxReferralVisitResponse'
            revision:
                $ref: '#/components/schemas/ReferralRevisionResponse'
          required:
            - referral
            - demand
            - supply
            - price
            - client
            - service
            - revision

    OutboxReferralDetailResponse:
      # Full blown representation of an referral, with related/nested entities
      allOf:
        - type: object
          properties:
            referral:
              $ref: '#/components/schemas/OutboxReferralCore'
            supply:
              $ref: '#/components/schemas/OrganizationLeanCore'
            alayacare:
              $ref: '#/components/schemas/OutboxAlayaCareCore'
            case_manager:
              $ref: '#/components/schemas/CaseManagerCore'
            price:
              $ref: '#/components/schemas/PriceCore'
            client:
              $ref: '#/components/schemas/OutboxReferralClientResponse'
            service:
              title: OutboxReferralServiceDetailResponse
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                outbox_id:
                  type: string
                  minLength: 1
                use_client_address:
                  type: boolean
                address:
                  $ref: '#/components/schemas/AddressCore'
                name:
                  type: string
                  minLength: 1
                start_at:
                  type: string
                  format: date-time
                end_at:
                  type: string
                  format: date-time
                instructions:
                  type: string
                skills:
                  type: array
                  items:
                    type: string
                custom_fields:
                  type: array
                  items:
                    $ref: '#/components/schemas/CustomFieldCore'
              required:
                - id
                - outbox_id
                - name
            visits:
              type: array
              items:
                $ref: '#/components/schemas/OutboxReferralVisitResponse'
            revision:
              $ref: '#/components/schemas/ReferralRevisionResponse'
          required:
            - referral
            - supply
            - price
            - client
            - service
            - revision

    OutboxReferralPageResponse:
      allOf:
        - $ref: '#/components/schemas/PageCore'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/OutboxReferralCollectionResponse'

    InboxReferralCore:
      description: |
        Core representation of an referral on the inbox API.
        Meant to be used in the nested `referral` in a top level (API) response schema.
      allOf:
        - $ref: '#/components/schemas/ReferralReasonCodeCore'
        - type: object
          properties:
            id:
              type: string
              format: uuid
            offer_id:
              type: string
              format: uuid
            shift_id:
              type: string
              format: uuid
            care_type:
              $ref: '#/components/schemas/CareTypeCore'
            referral_type:
              $ref: '#/components/schemas/ReferralTypeCore'
            start_at:
              type: string
              format: date-time
            end_at:
              type: string
              format: date-time
            comment:
              type: string
            status:
              $ref: '#/components/schemas/ReferralStatusCore'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
          required:
            - id
            - care_type
            - referral_type
            - start_at
            - end_at
            - status
            - created_at

    InboxReferralDetailResponse:
      description: |
        API response for the complete representation of an assigned referral on the inbox API.
        This schema is similar to the `InboxAnonReferral` except that it includes the complete
        representation of the referral instead of the anonymous representation.
      type: object
      properties:
        referral:
          $ref: '#/components/schemas/InboxReferralCore'
        demand:
          # better to call sender (CCAC)? or demand_persona?
          $ref: '#/components/schemas/OrganizationLeanCore'
        alayacare:
          $ref: '#/components/schemas/InboxReferralAlayaCareResponse'
        case_manager:
          $ref: '#/components/schemas/CaseManagerCore'
        price:
          $ref: '#/components/schemas/PriceCore'
        client:
          $ref: '#/components/schemas/InboxClientResponse'
        service:
          title: InboxReferralDetailServiceResponse
          type: object
          properties:
            id:
              type: string
              format: uuid
            use_client_address:
              type: boolean
            address:
              $ref: '#/components/schemas/AddressCore'
            name:
              type: string
              minLength: 1
            start_at:
              type: string
              format: date-time
            end_at:
              type: string
              format: date-time
            instructions:
              type: string
            skills:
              type: array
              items:
                type: string
            custom_fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldCore'
          required:
            - id
            - name
        visits:
          type: array
          items:
            $ref: '#/components/schemas/InboxReferralVisitResponse'
        revision:
            $ref: '#/components/schemas/ReferralRevisionResponse'
      required:
        - referral
        - demand
        - price
        - service
        - client
        - revision

    InboxReferralPageResponse:
      allOf:
        - $ref: '#/components/schemas/PageCore'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/InboxReferralCollectionResponse'
          required:
            - items

    OutboxReferralCancelRequest:
      allOf:
        - $ref: '#/components/schemas/ReferralReasonCodeCore'

    InboxReferralCancelRequest:
      allOf:
        - $ref: '#/components/schemas/ReferralReasonCodeCore'

    ReferralReasonCodeCore:
      description: |
        `reason_code` associated to a cancelled or closed referral.
      type: object
      properties:
        reason_code:
          type: string
          enum:
          - datetime_change
          - client_request
          - client_hospitalization
          - client_passed_away
          - client_refused_service

    ReferralStatusCore:
      type: string
      enum:
        - assigned
        - processed
        - cancelled

    ReferralTypeCore:
      type: string
      enum:
        - visit
        - service
        # - recurrence

    InboxVisitAssignRequest:
      type: object
      properties:
        employee_id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        ssn:
          type: string
        date_of_birth:
          type: string
          format: date
        data:
          type: object
      required:
        - employee_id
        - first_name
        - last_name

    InboxVisitTaskCompletionRequest:
      type: object
      properties:
        tasks:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/InboxVisitTaskCompletionCore'
      required:
        - tasks

    InboxVisitTaskCompletionCore:
      type: object
      properties:
        id:
          type: string
          format: uuid
        is_completed:
          type: boolean
        completed_at:
          type: string
          format: date-time
        completion_comment:
          type: string
      required:
        - id
        - is_completed

    InboxVisitTaskCollectionResponse:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/InboxVisitTaskCompletionCore'
      required:
        - tasks

    InboxVisitScheduleRequest:
      type: object
      properties:
        inbox_id:
          type: string
          minLength: 1
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
        service_id:
          type: string
          format: uuid
        referral_id:
          type: string
          format: uuid
      required:
        - inbox_id
        - start_at
        - end_at

    InboxVisitScheduleResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        inbox_id:
          type: string
          minLength: 1
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
        service_id:
          type: string
          format: uuid
        referral_id:
          type: string
          format: uuid
      required:
        - id
        - inbox_id
        - start_at
        - end_at
        - service_id
        - referral_id

    InboxVisitRescheduleRequest:
      type: object
      properties:
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
      required:
        - start_at
        - end_at

    InboxVisitRescheduleResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
      required:
        - id
        - start_at
        - end_at

    OutboxVisitPageResponse:
      allOf:
        - $ref: '#/components/schemas/PageCore'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/OutboxVisitCollectionResponse'

    InboxVisitPageResponse:
      allOf:
        - $ref: '#/components/schemas/PageCore'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/InboxVisitCollectionResponse'

    SysAdminVisitPageResponse:
      allOf:
        - $ref: '#/components/schemas/PageCore'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/SysAdminVisitCollectionResponse'

    SysAdminVisitDetailResponse:
      type: object
      properties:
        visit:
          title: SysAdminVisitDetailCore
          type: object
          properties:
            id:
              type: string
              format: uuid
            outbox_id:
              type: string
            inbox_id:
              type: string
            referral_id:
              type: string
              format: uuid
            service_id:
              type: string
              format: uuid
            service_outbox_id:
              type: string
              minLength: 1
            status:
              type: string
              enum:
                - scheduled
                - deleted
            start_at:
              type: string
              format: date-time
            end_at:
              type: string
              format: date-time
          required:
            - status
            - id
            - referral_id
            - service_id
            - service_outbox_id
            - start_at
            - end_at
        supply_employee:
          title: SysAdminVisitDetailSupplyEmployeeResponse
          type: object
          properties:
            id:
              type: string
              format: uuid
            supply_persona_id:
              type: string
              format: uuid
            ssn_placeholder:
              type: string
            inbox_employee_id:
              type: integer
            first_name:
              type: string
            last_name:
              type: string
            date_of_birth:
              type: string
              format: date
            data:
              type: object
          required:
            - id
            - supply_persona_id
            - ssn_placeholder
            - inbox_employee_id
            - first_name
            - last_name
        tasks:
          title: SysAdminVisitTaskResponse
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              outbox_id:
                type: string
              is_completed:
                type: boolean
              completed_at:
                type: string
                format: date-time
              completion_comment:
                type: string
            required:
              - id
              - is_completed
      required:
        - visit
        - tasks

    InboxVisitDetailResponse:
      type: object
      properties:
        visit:
          $ref: '#/components/schemas/InboxVisitCore'
        supply_employee:
          title: InboxVisitDetailSupplyEmployeeResponse
          type: object
          properties:
            id:
              type: string
              format: uuid
            supply_persona_id:
              type: string
              format: uuid
            ssn_placeholder:
              type: string
            inbox_employee_id:
              type: integer            
            first_name:
              type: string
            last_name:
              type: string
            date_of_birth:
              type: string
              format: date
            data:
              type: object
          required:
            - id
            - supply_persona_id
            - ssn_placeholder
            - inbox_employee_id
            - first_name
            - last_name
        tasks:
          type: array
          items:
            title: InboxVisitDetailVisitTaskResponse
            type: object
            properties:
              id:
                type: string
                format: uuid
              outbox_id:
                type: string
              is_completed:
                type: boolean
              completed_at:
                type: string
                format: date-time
              completion_comment:
                type: string
            required:
              - id
              - is_completed
      required:
        - visit
        - tasks

    OutboxVisitDetailResponse:
      type: object
      properties:
        visit:
          $ref: '#/components/schemas/OutboxVisitCore'
        supply_employee:
          title: OutboxVisitDetailSupplyEmployeeResponse
          type: object
          properties:
            id:
              type: string
              format: uuid
            supply_persona_id:
              type: string
              format: uuid
            ssn_placeholder:
              type: string
            first_name:
              type: string
            last_name:
              type: string
            date_of_birth:
              type: string
              format: date
            data:
              type: object
          required:
            - id
            - supply_persona_id
            - ssn_placeholder
            - first_name
            - last_name
        tasks:
          type: array
          items:
            title: OutboxVisitDetailVisitTaskResponse                    
            type: object
            properties:
              id:
                type: string
                format: uuid
              outbox_id:
                type: string
              is_completed:
                type: boolean
              completed_at:
                type: string
                format: date-time
              completion_comment:
                type: string
            required:
              - id
              - is_completed
      required:
        - visit
        - tasks

    SysAdminVisitCollectionResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        outbox_id:
          type: string
        inbox_id:
          type: string
        referral_id:
          type: string
          format: uuid
        service_id:
          type: string
          format: uuid
        service_outbox_id:
          type: string
          minLength: 1
        status:
          type: string
          enum:
            - scheduled
            - deleted
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
      required:
        - status
        - id
        - referral_id
        - service_id
        - service_outbox_id
        - start_at
        - end_at

    OutboxVisitCollectionResponse:
      allOf:
        - $ref: '#/components/schemas/OutboxVisitCore'

    InboxVisitCollectionResponse:
      allOf:
        - $ref: '#/components/schemas/InboxVisitCore'

    VisitCore:
      type: object
      properties:
        id:
          type: string
          format: uuid
        referral_id:
          type: string
          format: uuid
        service_id:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - scheduled
            - deleted
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
      required:
        - status
        - id
        - referral_id
        - service_id
        - start_at
        - end_at

    InboxVisitCore:
      allOf:
        - $ref: '#/components/schemas/VisitCore'
        - type: object
          properties:
            inbox_id:
              type: string

    OutboxVisitCore:
      allOf:
        - $ref: '#/components/schemas/VisitCore'
        - type: object
          properties:
            # TODO: This should be `outbox_id` to be aligned with SysAdminVisitDetailResponse
            #   - consider renaming/deprecating
            visit_outbox_id:
              type: string
            service_outbox_id:
              type: string
              minLength: 1
          required:
            - service_outbox_id

    InboxWorkSessionStartRequest:
      type: object
      properties:
        start_at:
          type: string
          format: date-time
        start_latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
        start_longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
        visit_id:
          type: string
          format: uuid
        visit_inbox_id:
          type: string
        inbox_id:
          type: string
          minLength: 1
      required:
        - start_at
        - inbox_id

    InboxWorkSessionEndRequest:
      type: object
      properties:
        end_at:
          type: string
          format: date-time
        work_session_id:  # TODO: `work_session_id` or `id` ?
          type: string
          format: uuid
        end_latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
        end_longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
        visit_id:
          type: string
          format: uuid
        visit_inbox_id:
          type: string
        inbox_id:
          type: string
      required:
        - end_at

    OutboxWorkSessionPageResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OutboxWorkSessionCollectionResponse'
      required:
        - items

    OutboxWorkSessionCollectionResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        visit_id:
          type: string
          format: uuid
        visit_outbox_id:
          type: string
          description: ID of the visit provided by the demand organization.
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
        start_latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
        start_longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
        end_latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
        end_longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
      required:
        - id
        - visit_id
        - start_at

    InboxWorkSessionStartResponse:
        allOf:
        - $ref: '#/components/schemas/InboxWorkSessionStartRequest'
        type: object
        properties:
          id:
            type: string
            format: uuid
            description: Work Session ID.
        required:
          - id

    SysAdminOfferDetailResponse:
      type: object
      properties:
        offer:
          $ref: '#/components/schemas/OutboxOfferExtendedCore'
        demand:
          $ref: '#/components/schemas/OrganizationLeanCore'
        supply:
          $ref: '#/components/schemas/OrganizationLeanCore'
        alayacare:
          $ref: '#/components/schemas/OutboxAlayaCareCore'
        case_manager:
          $ref: '#/components/schemas/CaseManagerCore'
        direct_supply_persona_ids:
          description: |
            Identifiers of one (or more) supply organization for direct-to-supplier
            matching.
          type: array
          items:
            type: string
            format: uuid
        price:
          title: SysAdminOfferDetailPriceResponse
          type: object
          properties:
            default:
              $ref: '#/components/schemas/SysAdminPriceCore'
            custom:
              type: array
              items:
                title: SysAdminOfferPriceCustomCore
                allOf:
                  - $ref: '#/components/schemas/SysAdminPriceCore'
                  - type: object
                    properties:
                      supply_persona_id:
                        type: string
                        format: uuid
                    required:
                      - supply_persona_id
          required:
            - default
        client:
          title: SysAdminOfferDetailClientResponse
          type: object
          properties:
            outbox_id:
              type: string
              minLength: 1
            address:
              $ref: '#/components/schemas/AddressCore'
            contacts:
              # separate personal, medical contacts like CCAC?
              title: SysAdminOfferDetailClientContactResponse
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    # format: uuid
                  first_name:
                    type: string
                  last_name:
                    type: string
                  address:
                    title: SysAdminOfferDetailClientContactAddressResponse
                    type: object
                    properties:
                      city:
                        type: string
                      state:
                        type: string
                      zip:
                        type: string
                      country:
                        type: string
                      name:
                        type: string
                      address:
                        type: string
                      address_suite:
                        type: string
                      latitude:
                        type: number
                        format: double
                        minimum: -90
                        maximum: 90
                      longitude:
                        type: number
                        format: double
                        minimum: -180
                        maximum: 180
                  email:
                    type: string
                    format: email
                  phone_number:
                    type: string
                  language:
                    # should this be enum?
                    type: string
                  relationship:
                    # should this be enum?
                    type: string
            demographics:
              title: SysAdminOfferDetailClientDemographicsResponse
              type: object
              properties:
                first_name:
                  type: string
                  minLength: 1
                last_name:
                  type: string
                  minLength: 1
                email:
                  type: string
                  format: email
                phone_number:
                  type: string
                date_of_birth:
                  type: string
                  format: date
                gender:
                  # should this be enum?
                  type: string
                language:
                  # should this be enum?
                  type: string
                  # health card, etc?
              required:
                - first_name
                - last_name
            allergies:
              title: SysAdminOfferDetailClientAllergiesResponse
              type: array
              items:
                $ref: '#/components/schemas/AllergyCore'
            risks:
              title: SysAdminOfferDetailClientRisksResponse
              type: array
              items:
                $ref: '#/components/schemas/RiskCore'
            diagnoses:
              title: SysAdminOfferDetailClientDiagnosesResponse
              type: array
              items:
                type: object
                # Based on AlayaCare: medical_history.health_history.current_medical_history
                properties:
                  name:
                    # AlayaCare calls this diagnosis, combines CCAC code and description
                    type: string
                  description:
                    # AlayaCare doesn't use this for the CCAC
                    type: string
                  start_date:
                    type: string
                    format: date
            surgeries:
              title: SysAdminOfferDetailClientSurgeriesResponse
              type: array
              items:
                # Based on AlayaCare: medical_history.surgery.past_surgery_history
                type: object
                properties:
                  name:
                    # AlayaCare combines CCAC code and description
                    type: string
                  description:
                    # AlayaCare combines CCAC location and surgeon
                    type: string
                  start_date:
                    type: string
                    format: date
            custom_fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldCore'
            referral_only_custom_fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldCore'
          required:
            - outbox_id
            - demographics
            - address
        service:
          title: SysAdminOfferDetailServiceResponse
          type: object
          properties:
            id:
              type: string
              format: uuid
            outbox_id:
              type: string
              minLength: 1
            name:
              type: string
              minLength: 1
            use_client_address:
              type: boolean
            address:
              $ref: '#/components/schemas/AddressCore'
            start_at:
              type: string
              format: date-time
            end_at:
              type: string
              format: date-time
            instructions:
              # CCAC includes goals and other items in ServiceInstructions
              type: string
            skills:
              # should this live here or at root level or client level?
              # should this be a string or list of strings or list of objects?
              type: array
              items:
                type: string
            custom_fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldCore'
            referral_only_custom_fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldCore'
            # CCAC service includes priority, some other codes, and nests Frequencies in Service
          required:
            - id
            - outbox_id
            - name
        visits:
          type: array
          items:
            title: SysAdminOfferDetailVisitResponse
            type: object
            properties:
              id:
                type: string
                format: uuid
              outbox_id:
                type: string
                minLength: 1
              start_at:
                type: string
                format: date-time
              end_at:
                type: string
                format: date-time
              instructions:
                type: string
              tasks:
                type: array
                items:
                  title: SysAdminOfferDetailVisitTaskResponse
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    outbox_id:
                      type: string
                      minLength: 1
                    name:
                      type: string
                      minLength: 1
                    description:
                      type: string
                    is_required:
                      type: boolean
                  required:
                    - id
                    - outbox_id
                    - name
                    - is_required
            required:
              - id
              - outbox_id
              - start_at
              - end_at
      required:
        - offer
        - demand
        - price
        - client
        - service

    SysAdminPriceCore:
      type: object
      properties:
        rate_demand:
          type: number
          format: decimal
          description: The dollar amount for offer per unit.
          example: 30.00
        rate_supply:
          type: number
          format: decimal
          description: The dollar amount for offer per unit.
          example: 30.00
        unit:
          type: string
          description: The unit for the rate.
          enum:
            - per_visit
            - per_hour
            - amount
      required:
        - rate_demand
        - rate_supply
        - unit

    CustomFieldCore:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        value:
          type: string
      required:
        - name
        - value

    CustomFieldCollectionCore:
      type: object
      properties:
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldCore'

    ReferralRevisionResponse:
      type: object
      properties:
        revision_group_id:
          type: string
          format: uuid
        revision_number:
          type: integer
          minimum: 1
        revision_reasons:
          type: array
          items:
            type: string
        revision_comment:
          type: string
        is_latest_revision:
          type: boolean
      required:
        - revision_group_id
        - revision_number
        - is_latest_revision

    OutboxAlayaCareCore:
      type: object
      properties:
        authorizations:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationCore'
        # TODO AM-3222: Remove support for single authorization
        authorization:
          allOf:
            - type: object
              deprecated: true
            - $ref: '#/components/schemas/AuthorizationCore'
        care_plan:
          $ref: '#/components/schemas/OutboxCarePlanCore'

    InboxOfferAlayaCareResponse:
      type: object
      properties:
        authorizations:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationCore'
        # TODO AM-3222: Remove support for single authorization
        authorization:
          allOf:
            - type: object
              deprecated: true
            - $ref: '#/components/schemas/AuthorizationCore'
        care_plan:
          $ref: '#/components/schemas/InboxOfferCarePlanResponse'

    InboxReferralAlayaCareResponse:
      type: object
      properties:
        authorizations:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationCore'
        # TODO AM-3222: Remove support for single authorization
        authorization:
          allOf:
            - type: object
              deprecated: true
            - $ref: '#/components/schemas/AuthorizationCore'
        care_plan:
          $ref: '#/components/schemas/InboxReferralCarePlanResponse'

    AuthorizationCore:
      type: object
      properties:
        authorization_number:
          type: string
        authorization_status:
          type: string
        end_date:
          type: string
          format: date
        first_day_of_week:
          type: integer
        id:
          type: integer
        import_id:
          type: string
        member_number:
          type: string
        notes:
          type: string
        program_id:
          type: string
        rule_type:
          type: string
        rule_daily:
          type: number
          format: decimal
        rule_weekly:
          type: number
          format: decimal
        rule_monthly:
          type: number
          format: decimal
        rule_period:
          type: number
          format: decimal
        rule_monday:
          type: number
          format: decimal
        rule_tuesday:
          type: number
          format: decimal
        rule_wednesday:
          type: number
          format: decimal
        rule_thursday:
          type: number
          format: decimal
        rule_friday:
          type: number
          format: decimal
        rule_saturday:
          type: number
          format: decimal
        rule_sunday:
          type: number
          format: decimal
        start_date:
          type: string
          format: date
      required:
        - authorization_status
        - first_day_of_week
        - rule_type
        - start_date

    CaseManagerCore:
      type: object
      properties:
        name:
          type: string
        phone_number:
          type: string
        fax_number:
          type: string
        email:
          type: string

    OutboxCarePlanDiagnosisCore:
      allOf:
        - $ref: '#/components/schemas/CarePlanDiagnosisCore'
        - type: object
          properties:
            outbox_id:
              type: integer
          required:
            - outbox_id

    CarePlanDiagnosisCore:
      type: object
      properties:
        description:
          type: string
        end_date:
          type: string
          format: date
        is_from_library:
          type: boolean
        is_primary:
          type: boolean
        name:
          type: string
        rank:
          type: integer
        start_date:
          type: string
          format: date
        status:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - name
        - start_date
        - is_primary

    CarePlanGoalCore:
      type: object
      properties:
        description:
          type: string
        end_date:
          type: string
          format: date
        is_from_library:
          type: boolean
        is_primary:
          type: boolean
        last_updated_progress:
          title: GoalLastUpdatedProgressCore
          type: object
          properties:
            comment:
              type: string
            percentage:
              type: integer
            completed:
              type: boolean
        name:
          type: string
        progress_type:
          type: string
        rank:
          type: integer
        start_date:
          type: string
          format: date
        status:
          type: string
        type:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - name
        - start_date
        - is_primary
        - type
        - progress_type

    OutboxCarePlanGoalCore:
      allOf:
        - $ref: '#/components/schemas/CarePlanGoalCore'
        - type: object
          properties:
            outbox_id:
              type: integer
            diagnoses:
              type: array
              items:
                title: OutboxCarePlanGoalDiagnosisCore
                type: object
                properties:
                  outbox_id:
                    type: integer
                  name:
                    type: string
                required:
                  - outbox_id
                  - name
          required:
            - outbox_id

    InboxCarePlanGoalResponse:
      allOf:
        - $ref: '#/components/schemas/CarePlanGoalCore'
        - type: object
          properties:
            diagnoses:
              type: array
              items:
                title: InboxCarePlanGoalDiagnosisCore
                type: object
                properties:
                  name:
                    type: string
                required:
                  - name

    CarePlanInterventionCore:
      type: object
      properties:
        description:
          type: string
        end_date:
          type: string
          format: date
        external_link:
          title: CarePlanInterventionExternalLinkCore
          type: object
          properties:
            label:
              type: string
            url:
              type: string
          required:
            - label
            - url
        has_duration:
          type: boolean
        is_from_library:
          type: boolean
        is_required:
          type: boolean
        name:
          type: string
        rank:
          type: integer
        recurrence:
          title: CarePlanInterventionRecurrenceCore
          type: object
          properties:
            count:
              type: integer
            frequency:
              type: string
            interval:
              type: integer
            weekdays:
              type: array
              items:
                type: string
            monthday:
              type: integer
            available_from:
              type: string
            available_to:
              type: string
          required:
            - frequency
            - interval
        recurrence_type:
          type: string
        start_date:
          type: string
          format: date
        status:
          type: string
        timezone:
          type: string
        type:
          type: string
        updated_at:
          type: string
          format: date-time
      required:
        - has_duration
        - is_required
        - name
        - rank
        - recurrence_type
        - start_date
        - status
        - type

    OutboxCarePlanInterventionCore:
      allOf:
        - $ref: '#/components/schemas/CarePlanInterventionCore'
        - type: object
          properties:
            goals:
              type: array
              items:
                title: OutboxCarePlanInterventionGoalCore
                type: object
                properties:
                  outbox_id:
                    type: integer
                  name:
                    type: string
                required:
                  - outbox_id
                  - name
            outbox_id:
              type: integer
          required:
            - outbox_id

    InboxReferralCarePlanInterventionResponse:
      allOf:
        - $ref: '#/components/schemas/CarePlanInterventionCore'
        - type: object
          properties:
            goals:
              type: array
              items:
                title: InboxCarePlanInterventionGoalCore
                type: object
                properties:
                  name:
                    type: string
                required:
                  - name

    OutboxCarePlanCore:
      type: object
      properties:
        outbox_id:
          type: integer
        name:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        status:
          type: string
        diagnoses:
          type: array
          items:
            $ref: '#/components/schemas/OutboxCarePlanDiagnosisCore'
        goals:
          type: array
          items:
            $ref: '#/components/schemas/OutboxCarePlanGoalCore'
        interventions:
          type: array
          items:
            $ref: '#/components/schemas/OutboxCarePlanInterventionCore'
        updated_at:
          type: string
          format: date-time
      required:
        - name
        - outbox_id
        - start_date

    InboxOfferCarePlanResponse:
      type: object
      properties:
        name:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        status:
          type: string
        interventions:
          type: array
          items:
            $ref: '#/components/schemas/CarePlanInterventionCore'
        updated_at:
          type: string
          format: date-time
      required:
        - name
        - start_date

    InboxReferralCarePlanResponse:
      type: object
      properties:
        name:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        status:
          type: string
        diagnoses:
          type: array
          items:
            $ref: '#/components/schemas/CarePlanDiagnosisCore'
        goals:
          type: array
          items:
            $ref: '#/components/schemas/InboxCarePlanGoalResponse'
        interventions:
          type: array
          items:
            $ref: '#/components/schemas/InboxReferralCarePlanInterventionResponse'
        updated_at:
          type: string
          format: date-time
      required:
        - name
        - start_date

  securitySchemes:
    CognitoAuthorizer:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authtype: "cognito_user_pools"
      x-amazon-apigateway-authorizer:
        type: "cognito_user_pools"
        providerARNs:
        - Fn::Sub: "{{resolve:ssm:/${StackName}/${UserPoolArnSSMParameterName}}}"
